name: Run Ubuntu Script

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: 'locomoco_db_test'
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    
    steps:
      - uses: actions/checkout@v4
    
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.yml
        run: printf "%s" "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Create directory test resources
        run: mkdir ./src/test/resources

      - name: Create test application.yml
        run: printf "%s" "${{ secrets.TEST_APPLICATION_YML }}" > ./src/test/resources/application.yml

      - name: Create mysql test data
        run: echo "${{ secrets.MYSQL_TEST_DATA }}" | base64 --decode > ./src/main/resources/data.sql
  
      - name: Restore database from data
        run: |
          mysql -h 127.0.0.1 -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} locomoco_db_test < ./src/main/resources/data.sql

      - name: Remove data.sql
        run: rm ./src/main/resources/data.sql

      - name: Permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/locomoco .
          docker push ${{ secrets.DOCKER_USERNAME }}/locomoco

      - name: Access EC2 and run application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_KEY_PAIR }}
          port: 22
          script: |
            docker stop $(docker ps -a -q) 
            docker rm $(docker ps -a -q) 
            docker pull ${{ secrets.DOCKER_USERNAME }}/locomoco
            docker run -d -e TZ=Asia/Seoul -p 8090:8090 --name locomoco-server ${{ secrets.DOCKER_USERNAME }}/locomoco
